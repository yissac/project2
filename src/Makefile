#############################################################################
# Makefile for building: simTool
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sun Apr 22 17:56:10 2012
# Project:  simTool.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile simTool.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/X11R6/lib64 -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		node.cpp \
		edge.cpp \
		mechanicalnode.cpp \
		socialnode.cpp \
		search.cpp \
		feeder.cpp \
		astargraphsearch.cpp \
		offlinefeeder.cpp \
		simulator.cpp \
		heuristic.cpp \
		xmlwriter.cpp \
		xmlreader.cpp \
		graphfactory.cpp \
		geometricobject.cpp \
		graphicalnode.cpp \
		graphicaledge.cpp \
		observer.cpp \
		observable.cpp \
		dialog.cpp \
		rrtsearch.cpp \
		searchnode.cpp \
		environment.cpp \
		xmlread.cpp \
		simulatedannealing.cpp \
		surfex.cpp \
		optimize.cpp moc_mainwindow.cpp \
		moc_simulator.cpp \
		moc_dialog.cpp \
		moc_optimize.cpp
OBJECTS       = main.o \
		mainwindow.o \
		node.o \
		edge.o \
		mechanicalnode.o \
		socialnode.o \
		search.o \
		feeder.o \
		astargraphsearch.o \
		offlinefeeder.o \
		simulator.o \
		heuristic.o \
		xmlwriter.o \
		xmlreader.o \
		graphfactory.o \
		geometricobject.o \
		graphicalnode.o \
		graphicaledge.o \
		observer.o \
		observable.o \
		dialog.o \
		rrtsearch.o \
		searchnode.o \
		environment.o \
		xmlread.o \
		simulatedannealing.o \
		surfex.o \
		optimize.o \
		moc_mainwindow.o \
		moc_simulator.o \
		moc_dialog.o \
		moc_optimize.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		simTool.pro
QMAKE_TARGET  = simTool
DESTDIR       = 
TARGET        = simTool

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_dialog.h ui_optimize.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: simTool.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile simTool.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile simTool.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/simTool1.0.0 || $(MKDIR) .tmp/simTool1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/simTool1.0.0/ && $(COPY_FILE) --parents mainwindow.h node.hpp edge.hpp mechanicalnode.hpp socialnode.hpp search.hpp feeder.hpp astargraphsearch.hpp offlinefeeder.hpp simulator.hpp heuristic.hpp rapidxml_utils.hpp rapidxml_print.hpp rapidxml_iterators.hpp rapidxml.hpp xmlreader.hpp xmlwriter.hpp graphfactory.hpp geometricobject.hpp graphicalnode.hpp graphicaledge.hpp observer.hpp observable.hpp dialog.hpp rrtsearch.h environment.h searchnode.h xmlread.hpp simulatedannealing.hpp surfex.hpp optimize.h .tmp/simTool1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp node.cpp edge.cpp mechanicalnode.cpp socialnode.cpp search.cpp feeder.cpp astargraphsearch.cpp offlinefeeder.cpp simulator.cpp heuristic.cpp xmlwriter.cpp xmlreader.cpp graphfactory.cpp geometricobject.cpp graphicalnode.cpp graphicaledge.cpp observer.cpp observable.cpp dialog.cpp rrtsearch.cpp searchnode.cpp environment.cpp xmlread.cpp simulatedannealing.cpp surfex.cpp optimize.cpp .tmp/simTool1.0.0/ && $(COPY_FILE) --parents mainwindow.ui dialog.ui optimize.ui .tmp/simTool1.0.0/ && (cd `dirname .tmp/simTool1.0.0` && $(TAR) simTool1.0.0.tar simTool1.0.0 && $(COMPRESS) simTool1.0.0.tar) && $(MOVE) `dirname .tmp/simTool1.0.0`/simTool1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/simTool1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_simulator.cpp moc_dialog.cpp moc_optimize.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_simulator.cpp moc_dialog.cpp moc_optimize.cpp
moc_mainwindow.cpp: dialog.hpp \
		rrtsearch.h \
		searchnode.h \
		environment.h \
		search.hpp \
		feeder.hpp \
		node.hpp \
		edge.hpp \
		heuristic.hpp \
		mechanicalnode.hpp \
		observable.hpp \
		observer.hpp \
		astargraphsearch.hpp \
		offlinefeeder.hpp \
		xmlreader.hpp \
		rapidxml.hpp \
		socialnode.hpp \
		xmlread.hpp \
		simulator.hpp \
		geometricobject.hpp \
		graphicalnode.hpp \
		graphicaledge.hpp \
		optimize.h \
		surfex.hpp \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_simulator.cpp: geometricobject.hpp \
		graphicalnode.hpp \
		graphicaledge.hpp \
		observer.hpp \
		mechanicalnode.hpp \
		node.hpp \
		edge.hpp \
		simulator.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) simulator.hpp -o moc_simulator.cpp

moc_dialog.cpp: rrtsearch.h \
		searchnode.h \
		environment.h \
		dialog.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dialog.hpp -o moc_dialog.cpp

moc_optimize.cpp: surfex.hpp \
		optimize.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) optimize.h -o moc_optimize.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_dialog.h ui_optimize.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_dialog.h ui_optimize.h
ui_mainwindow.h: mainwindow.ui \
		simulator.hpp \
		geometricobject.hpp \
		graphicalnode.hpp \
		graphicaledge.hpp \
		observer.hpp \
		mechanicalnode.hpp \
		node.hpp \
		edge.hpp
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_dialog.h: dialog.ui
	/usr/bin/uic-qt4 dialog.ui -o ui_dialog.h

ui_optimize.h: optimize.ui
	/usr/bin/uic-qt4 optimize.ui -o ui_optimize.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		dialog.hpp \
		rrtsearch.h \
		searchnode.h \
		environment.h \
		search.hpp \
		feeder.hpp \
		node.hpp \
		edge.hpp \
		heuristic.hpp \
		mechanicalnode.hpp \
		observable.hpp \
		observer.hpp \
		astargraphsearch.hpp \
		offlinefeeder.hpp \
		xmlreader.hpp \
		rapidxml.hpp \
		socialnode.hpp \
		xmlread.hpp \
		simulator.hpp \
		geometricobject.hpp \
		graphicalnode.hpp \
		graphicaledge.hpp \
		optimize.h \
		surfex.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		dialog.hpp \
		rrtsearch.h \
		searchnode.h \
		environment.h \
		search.hpp \
		feeder.hpp \
		node.hpp \
		edge.hpp \
		heuristic.hpp \
		mechanicalnode.hpp \
		observable.hpp \
		observer.hpp \
		astargraphsearch.hpp \
		offlinefeeder.hpp \
		xmlreader.hpp \
		rapidxml.hpp \
		socialnode.hpp \
		xmlread.hpp \
		simulator.hpp \
		geometricobject.hpp \
		graphicalnode.hpp \
		graphicaledge.hpp \
		optimize.h \
		surfex.hpp \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

node.o: node.cpp node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o node.o node.cpp

edge.o: edge.cpp edge.hpp \
		node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o edge.o edge.cpp

mechanicalnode.o: mechanicalnode.cpp mechanicalnode.hpp \
		node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mechanicalnode.o mechanicalnode.cpp

socialnode.o: socialnode.cpp socialnode.hpp \
		node.hpp \
		edge.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o socialnode.o socialnode.cpp

search.o: search.cpp search.hpp \
		feeder.hpp \
		node.hpp \
		edge.hpp \
		heuristic.hpp \
		mechanicalnode.hpp \
		observable.hpp \
		observer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o search.o search.cpp

feeder.o: feeder.cpp feeder.hpp \
		node.hpp \
		edge.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o feeder.o feeder.cpp

astargraphsearch.o: astargraphsearch.cpp astargraphsearch.hpp \
		search.hpp \
		feeder.hpp \
		node.hpp \
		edge.hpp \
		heuristic.hpp \
		mechanicalnode.hpp \
		observable.hpp \
		observer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o astargraphsearch.o astargraphsearch.cpp

offlinefeeder.o: offlinefeeder.cpp offlinefeeder.hpp \
		feeder.hpp \
		node.hpp \
		edge.hpp \
		xmlreader.hpp \
		rapidxml.hpp \
		socialnode.hpp \
		mechanicalnode.hpp \
		xmlread.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o offlinefeeder.o offlinefeeder.cpp

simulator.o: simulator.cpp simulator.hpp \
		geometricobject.hpp \
		graphicalnode.hpp \
		graphicaledge.hpp \
		observer.hpp \
		mechanicalnode.hpp \
		node.hpp \
		edge.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator.o simulator.cpp

heuristic.o: heuristic.cpp heuristic.hpp \
		node.hpp \
		edge.hpp \
		mechanicalnode.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o heuristic.o heuristic.cpp

xmlwriter.o: xmlwriter.cpp xmlwriter.hpp \
		rapidxml.hpp \
		rapidxml_print.hpp \
		socialnode.hpp \
		node.hpp \
		edge.hpp \
		offlinefeeder.hpp \
		feeder.hpp \
		xmlreader.hpp \
		mechanicalnode.hpp \
		xmlread.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlwriter.o xmlwriter.cpp

xmlreader.o: xmlreader.cpp xmlreader.hpp \
		rapidxml.hpp \
		edge.hpp \
		node.hpp \
		socialnode.hpp \
		mechanicalnode.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlreader.o xmlreader.cpp

graphfactory.o: graphfactory.cpp graphfactory.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphfactory.o graphfactory.cpp

geometricobject.o: geometricobject.cpp geometricobject.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o geometricobject.o geometricobject.cpp

graphicalnode.o: graphicalnode.cpp graphicalnode.hpp \
		geometricobject.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphicalnode.o graphicalnode.cpp

graphicaledge.o: graphicaledge.cpp graphicaledge.hpp \
		geometricobject.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphicaledge.o graphicaledge.cpp

observer.o: observer.cpp observer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o observer.o observer.cpp

observable.o: observable.cpp observable.hpp \
		observer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o observable.o observable.cpp

dialog.o: dialog.cpp dialog.hpp \
		rrtsearch.h \
		searchnode.h \
		environment.h \
		ui_dialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dialog.o dialog.cpp

rrtsearch.o: rrtsearch.cpp rrtsearch.h \
		searchnode.h \
		environment.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rrtsearch.o rrtsearch.cpp

searchnode.o: searchnode.cpp searchnode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o searchnode.o searchnode.cpp

environment.o: environment.cpp environment.h \
		searchnode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o environment.o environment.cpp

xmlread.o: xmlread.cpp xmlread.hpp \
		edge.hpp \
		node.hpp \
		mechanicalnode.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlread.o xmlread.cpp

simulatedannealing.o: simulatedannealing.cpp simulatedannealing.hpp \
		node.hpp \
		edge.hpp \
		feeder.hpp \
		offlinefeeder.hpp \
		xmlreader.hpp \
		rapidxml.hpp \
		socialnode.hpp \
		mechanicalnode.hpp \
		xmlread.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulatedannealing.o simulatedannealing.cpp

surfex.o: surfex.cpp surfex.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o surfex.o surfex.cpp

optimize.o: optimize.cpp optimize.h \
		surfex.hpp \
		ui_optimize.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o optimize.o optimize.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_simulator.o: moc_simulator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_simulator.o moc_simulator.cpp

moc_dialog.o: moc_dialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dialog.o moc_dialog.cpp

moc_optimize.o: moc_optimize.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_optimize.o moc_optimize.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

